name: Validate Inputs and Create AMI

on:
  workflow_dispatch:
    inputs:
      server_ip:
        description: "Server IP address"
        required: true
      environment:
        description: "Environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

jobs:
  validate-and-create-ami:
    runs-on: ubuntu-latest
    env:  # Global environment variables
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip boto3

    - name: Validate Server IP
      id: validate_ip
      run: |
        echo "Validating server IP: ${{ github.event.inputs.server_ip }}"

        # Validate if input is a valid IP
        if ! [[ "${{ github.event.inputs.server_ip }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Provided server IP is not in valid IPv4 format."
          exit 1
        fi
        echo "Server IP is valid."

    - name: Validate Instance on AWS
      id: check_instance
      run: |
        echo "Validating instance for IP: ${{ github.event.inputs.server_ip }} in environment: ${{ github.event.inputs.environment }}"

        # Run Python script to validate IP with AWS
        python scripts/create_ami.py --instance-ip ${{ github.event.inputs.server_ip }}
      continue-on-error: false

    - name: Create AMI
      if: ${{ success() }}
      run: |
        echo "Proceeding with AMI creation..."
        # Replace this with AMI creation logic
