name: Create AMI

on:
  workflow_dispatch:
    inputs:
      server_ip:
        description: "Server IP address"
        required: true
      environment:
        description: "Environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
      aws_region:
        description: "AWS Region"
        required: true
        default: "eu-central-1"
        type: choice
        options:
          - eu-central-1
          - us-east-1
      aws_role:
        description: "AWS Role to assume"
        required: false

jobs:
  validate-and-create-ami:
    # Conditional runner selection based on environment input
    runs-on: ${{ github.event.inputs.environment == 'staging' && 'github-agent-1' || 'production-github-agent-1' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip boto3

    - name: Set AWS Region and Role based on Environment
      id: set_env
      run: |
        if [ "${{ github.event.inputs.environment }}" == "staging" ]; then
          echo "AWS Role: arn:aws:iam::034362028102:role/github_oidc_role"
          echo "AWS Region: ${{ github.event.inputs.aws_region }}"
          echo "AWS_ROLE=arn:aws:iam::034362028102:role/github_oidc_role" >> $GITHUB_ENV
          echo "AWS_REGION=${{ github.event.inputs.aws_region }}" >> $GITHUB_ENV
        elif [ "${{ github.event.inputs.environment }}" == "production" ]; then
          echo "AWS Role: arn:aws:iam::327685137044:role/prod_github_oidc_role"
          echo "AWS Region: ${{ github.event.inputs.aws_region }}"
          echo "AWS_ROLE=arn:aws:iam::327685137044:role/prod_github_oidc_role" >> $GITHUB_ENV
          echo "AWS_REGION=${{ github.event.inputs.aws_region }}" >> $GITHUB_ENV
        else
          echo "Error: Unknown environment"
          exit 1
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ env.AWS_ROLE }}
        role-session-name: 'github_to_aws_via_federatedOIDC'
        aws-region: ${{ env.AWS_REGION }}

    - name: Validate Server IP
      id: validate_ip
      run: |
        echo "Validating server IP: ${{ github.event.inputs.server_ip }}"

        # Validate if input is a valid IP
        if ! [[ "${{ github.event.inputs.server_ip }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Provided server IP is not in valid IPv4 format."
          exit 1
        fi
        echo "Server IP is valid."

    - name: Validate Instance on AWS
      id: check_instance
      run: |
        echo "Validating instance for IP: ${{ github.event.inputs.server_ip }} in environment: ${{ github.event.inputs.environment }}"

        # Run Python script to validate IP with AWS
        python scripts/create_ami.py --instance-ip ${{ github.event.inputs.server_ip }}
      continue-on-error: false

    - name: Create AMI
      if: ${{ success() }}
      run: |
        echo "Proceeding with AMI creation..."
        # Replace this with AMI creation logic
